version: '3.8'

services:
  # ============================================================================
  # Device Service Backend API
  # ============================================================================
  device-service-api:
    build:
      context: .
      dockerfile: Dockerfile
      target: backend-builder
    container_name: device-service-api
    ports:
      - "8000:8000"
    environment:
      - DEVICE_SERVICE_HOST=0.0.0.0
      - DEVICE_SERVICE_PORT=8000
      - DATABASE_URL=sqlite:///./device_service.db
      - MQTT_BROKER_HOST=127.0.0.1
      - MQTT_BROKER_PORT=2834
      - BACKGROUND_WORKER_INTERVAL=10.0
      - CONTROLLER_API_TIMEOUT=1.0
      - LOG_LEVEL=INFO
    volumes:
      - ./logs:/app/logs
      - device-service-db:/app/device_service.db
    networks:
      - device-service-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      - device-service-db-init

  # ============================================================================
  # Device Service Frontend
  # ============================================================================
  device-service-frontend:
    build:
      context: .
      dockerfile: Dockerfile
      target: frontend-builder
    container_name: device-service-frontend
    ports:
      - "3000:80"
    environment:
      - NODE_ENV=production
    networks:
      - device-service-network
    restart: unless-stopped
    depends_on:
      - device-service-api

  # ============================================================================
  # Database Initialization Service
  # ============================================================================
  device-service-db-init:
    build:
      context: .
      dockerfile: Dockerfile
      target: backend-builder
    container_name: device-service-db-init
    command: >
      sh -c "
        python init_sample_data.py &&
        echo 'Database initialized successfully'
      "
    volumes:
      - device-service-db:/app/device_service.db
    networks:
      - device-service-network
    profiles:
      - init

  # ============================================================================
  # Nginx Reverse Proxy (Optional)
  # ============================================================================
  nginx-proxy:
    image: nginx:alpine
    container_name: device-service-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    networks:
      - device-service-network
    restart: unless-stopped
    depends_on:
      - device-service-api
      - device-service-frontend
    profiles:
      - proxy

  # ============================================================================
  # MQTT Broker (Optional - for development)
  # ============================================================================
  mqtt-broker:
    image: eclipse-mosquitto:2.0
    container_name: device-service-mqtt
    ports:
      - "2834:1883"
      - "9001:9001"
    volumes:
      - ./mqtt/config:/mosquitto/config:ro
      - ./mqtt/data:/mosquitto/data
      - ./mqtt/log:/mosquitto/log
    networks:
      - device-service-network
    restart: unless-stopped
    profiles:
      - mqtt

# ============================================================================
# Networks
# ============================================================================
networks:
  device-service-network:
    driver: bridge
    name: device-service-network

# ============================================================================
# Volumes
# ============================================================================
volumes:
  device-service-db:
    driver: local
    name: device-service-db