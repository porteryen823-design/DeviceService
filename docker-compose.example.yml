version: '3.8'

services:
  webapi:
    build: .
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --workers ${UVICORN_WORKERS:-4}
    ports:
      - "8000:8000"
    environment:
      - UVICORN_WORKERS=${UVICORN_WORKERS:-4}
      - DATABASE_URL=${DATABASE_URL:-sqlite:///./device_service.db}
      - MQTT_BROKER_HOST=${MQTT_BROKER_HOST:-127.0.0.1}
      - MQTT_BROKER_PORT=${MQTT_BROKER_PORT:-2834}
      - BACKGROUND_WORKER_INTERVAL=${BACKGROUND_WORKER_INTERVAL:-5}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    volumes:
      - ./logs:/app/logs
      - ./device_service.db:/app/device_service.db
    depends_on:
      - db
    restart: unless-stopped

  background_worker:
    build: .
    command: python -m app.main_background_worker
    environment:
      - DATABASE_URL=${DATABASE_URL:-sqlite:///./device_service.db}
      - MQTT_BROKER_HOST=${MQTT_BROKER_HOST:-127.0.0.1}
      - MQTT_BROKER_PORT=${MQTT_BROKER_PORT:-2834}
      - BACKGROUND_WORKER_INTERVAL=${BACKGROUND_WORKER_INTERVAL:-5}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    volumes:
      - ./logs:/app/logs
      - ./device_service.db:/app/device_service.db
    depends_on:
      - db
      - webapi
    restart: unless-stopped

  db:
    image: postgres:13
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-device_service}
      - POSTGRES_USER=${POSTGRES_USER:-device_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-device_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    restart: unless-stopped

  # MQTT Broker (如果需要本地 MQTT Broker)
  mqtt_broker:
    image: eclipse-mosquitto:2.0
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./mosquitto/config:/mosquitto/config
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/log:/mosquitto/log
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  default:
    name: device_service_network